//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Source Executable: c:\windows\system32\PeerDistSvc.dll
// Interface ID: 15cd3850-28ca-11ce-a4e8-00aa006116cb
// Interface Version: 1.0



namespace rpc_15cd3850_28ca_11ce_a4e8_00aa006116cb_1_0
{
    
    #region Marshal Helpers
    internal class _Marshal_Helper : NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer
    {
        public void Write_0(Struct_0 p0)
        {
            WriteStruct<Struct_0>(p0);
        }
        public void Write_1(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_2(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_3(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_4(byte[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<byte>(p0, p1, p2);
        }
        public void Write_5(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_6(byte[] p0, long p1)
        {
            WriteConformantArray<byte>(p0, p1);
        }
        public void Write_7(byte[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<byte>(p0, p1, p2);
        }
        public void Write_8(byte[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<byte>(p0, p1, p2);
        }
    }
    internal class _Unmarshal_Helper : NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer
    {
        public _Unmarshal_Helper(NtApiDotNet.Win32.Rpc.RpcClientResponse r) : 
                base(r.NdrBuffer, r.Handles, r.DataRepresentation)
        {
        }
        public _Unmarshal_Helper(byte[] ba) : 
                base(ba)
        {
        }
        public Struct_0 Read_0()
        {
            return ReadStruct<Struct_0>();
        }
        public byte[] Read_1()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_2()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_3()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_4()
        {
            return ReadConformantVaryingArray<byte>();
        }
        public byte[] Read_5()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_6()
        {
            return ReadConformantArray<byte>();
        }
        public byte[] Read_7()
        {
            return ReadConformantVaryingArray<byte>();
        }
        public byte[] Read_8()
        {
            return ReadConformantVaryingArray<byte>();
        }
    }
    #endregion
    #region Complex Types
    public struct Struct_0 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteInt32(Member0);
            m.WriteInt32(Member4);
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadInt32();
            Member4 = u.ReadInt32();
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        public int Member0;
        public int Member4;
        public static Struct_0 CreateDefault()
        {
            return new Struct_0();
        }
        public Struct_0(int Member0, int Member4)
        {
            this.Member0 = Member0;
            this.Member4 = Member4;
        }
    }
    #endregion
    #region Client Implementation
    public sealed class Client : NtApiDotNet.Win32.Rpc.RpcClientBase
    {
        public Client() : 
                base("15cd3850-28ca-11ce-a4e8-00aa006116cb", 1, 0)
        {
        }
        private _Unmarshal_Helper SendReceive(int p, _Marshal_Helper m)
        {
            return new _Unmarshal_Helper(SendReceive(p, m.DataRepresentation, m.ToArray(), m.Handles));
        }
        public uint PeerDistStartupRPC(int p0, int p1, out NtApiDotNet.Ndr.Marshal.NdrContextHandle p2, out NtApiDotNet.Ndr.Marshal.NdrEnum16 p3, ref System.Nullable<int> p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.WriteInt32(p1);
            m.WriteReferent(p4, new System.Action<int>(m.WriteInt32));
            _Unmarshal_Helper u = SendReceive(0, m);
            p2 = u.ReadContextHandle();
            p3 = u.ReadEnum16();
            p4 = u.ReadReferentValue<int>(new System.Func<int>(u.ReadInt32), false);
            return u.ReadUInt32();
        }
        public uint PeerDistShutdownRPC(ref NtApiDotNet.Ndr.Marshal.NdrContextHandle p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            _Unmarshal_Helper u = SendReceive(1, m);
            p0 = u.ReadContextHandle();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistGetServiceStatusRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, ref NtApiDotNet.Ndr.Marshal.NdrEnum16 p1, out int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteEnum16(p1);
            _Unmarshal_Helper u = SendReceive(2, m);
            p1 = u.ReadEnum16();
            p2 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistServerPublishStreamRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, int p1, byte[] p2, long p3, System.Nullable<Struct_0> p4, out NtApiDotNet.Ndr.Marshal.NdrContextHandle p5, out int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteInt32(p1);
            m.Write_1(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"), p1);
            m.WriteInt64(p3);
            m.WriteReferent(p4, new System.Action<Struct_0>(m.Write_0));
            _Unmarshal_Helper u = SendReceive(3, m);
            p5 = u.ReadContextHandle();
            p6 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistServerPublishAddToStreamRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, int p1, byte[] p2, out int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteInt32(p1);
            m.Write_2(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"), p1);
            _Unmarshal_Helper u = SendReceive(4, m);
            p3 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistServerPublishCompleteStreamRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            _Unmarshal_Helper u = SendReceive(5, m);
            p1 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistServerCloseStreamHandleRPC(ref NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            _Unmarshal_Helper u = SendReceive(6, m);
            p0 = u.ReadContextHandle();
            p1 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistServerUnpublishRPC(int p0, byte[] p1, out int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.Write_3(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"), p0);
            _Unmarshal_Helper u = SendReceive(7, m);
            p2 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistServerOpenContentInformationRPC(int p0, byte[] p1, long p2, long p3, out NtApiDotNet.Ndr.Marshal.NdrContextHandle p4, out int p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.Write_3(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"), p0);
            m.WriteInt64(p2);
            m.WriteInt64(p3);
            _Unmarshal_Helper u = SendReceive(8, m);
            p4 = u.ReadContextHandle();
            p5 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistServerRetrieveContentInformationRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, long p1, int p2, out int p3, out byte[] p4, out int p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteInt64(p1);
            m.WriteInt32(p2);
            _Unmarshal_Helper u = SendReceive(9, m);
            p3 = u.ReadInt32();
            p4 = u.Read_4();
            p5 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistServerCloseContentInfoRPC(ref NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            _Unmarshal_Helper u = SendReceive(10, m);
            p0 = u.ReadContextHandle();
            p1 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistClientOpenContentRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, byte[] p1, out NtApiDotNet.Ndr.Marshal.NdrContextHandle p2, out int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.Write_5(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"), 16);
            _Unmarshal_Helper u = SendReceive(11, m);
            p2 = u.ReadContextHandle();
            p3 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistClientCloseContentRPC(ref NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            _Unmarshal_Helper u = SendReceive(12, m);
            p0 = u.ReadContextHandle();
            p1 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistClientAddContentInformationRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, int p1, byte[] p2, out int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteInt32(p1);
            m.Write_2(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"), p1);
            _Unmarshal_Helper u = SendReceive(13, m);
            p3 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistClientCompleteContentInformationRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            _Unmarshal_Helper u = SendReceive(14, m);
            p1 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistClientAddDataRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, long p1, int p2, byte[] p3, out int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteInt64(p1);
            m.WriteInt32(p2);
            m.Write_6(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p3, "p3"), p2);
            _Unmarshal_Helper u = SendReceive(15, m);
            p4 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistClientBlockReadRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, long p1, int p2, out int p3, out byte[] p4, int p5, out long p6, int p7, out int p8)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteInt64(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p5);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(16, m);
            p3 = u.ReadInt32();
            p4 = u.Read_7();
            p6 = u.ReadInt64();
            p8 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistClientStreamReadRPC(NtApiDotNet.Ndr.Marshal.NdrContextHandle p0, int p1, out int p2, out byte[] p3, int p4, out long p5, int p6, out int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            m.WriteInt32(p1);
            m.WriteInt32(p4);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(17, m);
            p2 = u.ReadInt32();
            p3 = u.Read_8();
            p5 = u.ReadInt64();
            p7 = u.ReadInt32();
            return u.ReadUInt32();
        }
        // async
        public uint PeerDistClientFlushContentRPC(byte[] p0, out int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.Write_5(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"), 16);
            _Unmarshal_Helper u = SendReceive(18, m);
            p1 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistFlushContentRPC(out int p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(19, m);
            p0 = u.ReadInt32();
            return u.ReadUInt32();
        }
        public uint PeerDistQueryCacheInformation(out long p0, out long p1, out int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(20, m);
            p0 = u.ReadInt64();
            p1 = u.ReadInt64();
            p2 = u.ReadInt32();
            return u.ReadUInt32();
        }
    }
    #endregion
}

