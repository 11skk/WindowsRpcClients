//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Source Executable: c:\windows\system32\umpnpmgr.dll
// Interface ID: 8d9f4e40-a03d-11ce-8f69-08003e30051b
// Interface Version: 1.0



namespace rpc_8d9f4e40_a03d_11ce_8f69_08003e30051b_1_0
{
    
    #region Marshal Helpers
    internal class _Marshal_Helper : NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer
    {
        public void Write_0(Struct_1 p0)
        {
            WriteStruct<Struct_1>(p0);
        }
        public void Write_1(Struct_2 p0)
        {
            WriteStruct<Struct_2>(p0);
        }
        public void Write_2(Struct_3 p0)
        {
            WriteStruct<Struct_3>(p0);
        }
        public void Write_3(Union_4 p0, long p1)
        {
            WriteUnion<Union_4>(p0, p1);
        }
        public void Write_4(Struct_5 p0)
        {
            WriteStruct<Struct_5>(p0);
        }
        public void Write_5(Struct_6 p0)
        {
            WriteStruct<Struct_6>(p0);
        }
        public void Write_6(Union_7 p0, long p1)
        {
            WriteUnion<Union_7>(p0, p1);
        }
        public void Write_7(Struct_8 p0)
        {
            WriteStruct<Struct_8>(p0);
        }
        public void Write_8(string p0)
        {
            WriteFixedString(p0, 80);
        }
        public void Write_9(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_10(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_11(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_12(char[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<char>(p0, p1, p2);
        }
        public void Write_13(sbyte[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<sbyte>(p0, p1, p2);
        }
        public void Write_14(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
        public void Write_15(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_16(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_17(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_18(char[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<char>(p0, p1, p2);
        }
        public void Write_19(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_20(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_21(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_22(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_23(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_24(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
        public void Write_25(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
        public void Write_26(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
        public void Write_27(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
        public void Write_28(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
        public void Write_29(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
        public void Write_30(sbyte[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<sbyte>(p0, p1, p2);
        }
        public void Write_31(sbyte[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<sbyte>(p0, p1, p2);
        }
        public void Write_32(Struct_2[] p0, long p1, long p2)
        {
            WriteConformantVaryingStructArray<Struct_2>(p0, p1, p2);
        }
        public void Write_33(sbyte[] p0, long p1, long p2)
        {
            WriteConformantVaryingArray<sbyte>(p0, p1, p2);
        }
        public void Write_34(sbyte[] p0, long p1)
        {
            WriteConformantArray<sbyte>(p0, p1);
        }
        public void Write_35(string p0, long p1)
        {
            WriteConformantVaryingString(p0, p1);
        }
    }
    internal class _Unmarshal_Helper : NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer
    {
        public _Unmarshal_Helper(NtApiDotNet.Win32.Rpc.RpcClientResponse r) : 
                base(r.NdrBuffer, r.Handles, r.DataRepresentation)
        {
        }
        public _Unmarshal_Helper(byte[] ba) : 
                base(ba)
        {
        }
        public Struct_1 Read_0()
        {
            return ReadStruct<Struct_1>();
        }
        public Struct_2 Read_1()
        {
            return ReadStruct<Struct_2>();
        }
        public Struct_3 Read_2()
        {
            return ReadStruct<Struct_3>();
        }
        public Union_4 Read_3()
        {
            return ReadStruct<Union_4>();
        }
        public Struct_5 Read_4()
        {
            return ReadStruct<Struct_5>();
        }
        public Struct_6 Read_5()
        {
            return ReadStruct<Struct_6>();
        }
        public Union_7 Read_6()
        {
            return ReadStruct<Union_7>();
        }
        public Struct_8 Read_7()
        {
            return ReadStruct<Struct_8>();
        }
        public string Read_8()
        {
            return ReadFixedString(80);
        }
        public char[] Read_9()
        {
            return ReadConformantVaryingArray<char>();
        }
        public sbyte[] Read_10()
        {
            return ReadConformantVaryingArray<sbyte>();
        }
        public sbyte[] Read_11()
        {
            return ReadConformantArray<sbyte>();
        }
        public char[] Read_12()
        {
            return ReadConformantVaryingArray<char>();
        }
        public sbyte[] Read_13()
        {
            return ReadConformantArray<sbyte>();
        }
        public sbyte[] Read_14()
        {
            return ReadConformantArray<sbyte>();
        }
        public sbyte[] Read_15()
        {
            return ReadConformantArray<sbyte>();
        }
        public sbyte[] Read_16()
        {
            return ReadConformantArray<sbyte>();
        }
        public sbyte[] Read_17()
        {
            return ReadConformantArray<sbyte>();
        }
        public sbyte[] Read_18()
        {
            return ReadConformantVaryingArray<sbyte>();
        }
        public sbyte[] Read_19()
        {
            return ReadConformantVaryingArray<sbyte>();
        }
        public Struct_2[] Read_20()
        {
            return ReadConformantVaryingStructArray<Struct_2>();
        }
        public sbyte[] Read_21()
        {
            return ReadConformantVaryingArray<sbyte>();
        }
        public sbyte[] Read_22()
        {
            return ReadConformantArray<sbyte>();
        }
    }
    #endregion
    #region Complex Types
    public struct Struct_1 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteInt32(Member0);
            m.Write_8(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(Member4, "Member4"));
            m.WriteInt32(MemberA4);
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadInt32();
            Member4 = u.Read_8();
            MemberA4 = u.ReadInt32();
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        public int Member0;
        public string Member4;
        public int MemberA4;
        public static Struct_1 CreateDefault()
        {
            Struct_1 ret = new Struct_1();
            ret.Member4 = new string('\0', 80);
            return ret;
        }
        public Struct_1(int Member0, string Member4, int MemberA4)
        {
            this.Member0 = Member0;
            this.Member4 = Member4;
            this.MemberA4 = MemberA4;
        }
    }
    public struct Struct_2 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteGuid(Member0);
            m.WriteInt32(Member10);
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadGuid();
            Member10 = u.ReadInt32();
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        public System.Guid Member0;
        public int Member10;
        public static Struct_2 CreateDefault()
        {
            return new Struct_2();
        }
        public Struct_2(System.Guid Member0, int Member10)
        {
            this.Member0 = Member0;
            this.Member10 = Member10;
        }
    }
    public struct Struct_3 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteInt32(Member0);
            m.Write_3(Member8, Member0);
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadInt32();
            Member8 = u.Read_3();
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        public int Member0;
        public Union_4 Member8;
        public static Struct_3 CreateDefault()
        {
            return new Struct_3();
        }
        public Struct_3(int Member0, Union_4 Member8)
        {
            this.Member0 = Member0;
            this.Member8 = Member8;
        }
    }
    public struct Union_4 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            throw new System.NotImplementedException();
        }
        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)
        {
            Selector = ((uint)(l));
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteUInt32(Selector);
            if ((Selector == 1))
            {
                m.WriteEmbeddedPointer<Struct_5>(Arm_1, new System.Action<Struct_5>(m.Write_4));
                goto done;
            }
            throw new System.ArgumentException("No matching union selector when marshaling Union_4");
        done:
            return;
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Selector = u.ReadUInt32();
            if ((Selector == 1))
            {
                Arm_1 = u.ReadEmbeddedPointer<Struct_5>(new System.Func<Struct_5>(u.Read_4), false);
                goto done;
            }
            throw new System.ArgumentException("No matching union selector when marshaling Union_4");
        done:
            return;
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        private uint Selector;
        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_5> Arm_1;
        public static Union_4 CreateDefault()
        {
            return new Union_4();
        }
        public Union_4(uint Selector, System.Nullable<Struct_5> Arm_1)
        {
            this.Selector = Selector;
            this.Arm_1 = Arm_1;
        }
    }
    public struct Struct_5 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteEmbeddedPointer<string>(Member0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member0;
        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;
        public static Struct_5 CreateDefault()
        {
            return new Struct_5();
        }
        public Struct_5(string Member0, string Member8)
        {
            this.Member0 = Member0;
            this.Member8 = Member8;
        }
    }
    public struct Struct_6 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteInt32(Member0);
            m.Write_6(Member8, Member0);
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadInt32();
            Member8 = u.Read_6();
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        public int Member0;
        public Union_7 Member8;
        public static Struct_6 CreateDefault()
        {
            return new Struct_6();
        }
        public Struct_6(int Member0, Union_7 Member8)
        {
            this.Member0 = Member0;
            this.Member8 = Member8;
        }
    }
    public struct Union_7 : NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            throw new System.NotImplementedException();
        }
        void NtApiDotNet.Ndr.Marshal.INdrNonEncapsulatedUnion.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m, long l)
        {
            Selector = ((uint)(l));
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteUInt32(Selector);
            if ((Selector == 1))
            {
                m.WriteEmbeddedPointer<Struct_8>(Arm_1, new System.Action<Struct_8>(m.Write_7));
                goto done;
            }
            throw new System.ArgumentException("No matching union selector when marshaling Union_7");
        done:
            return;
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Selector = u.ReadUInt32();
            if ((Selector == 1))
            {
                Arm_1 = u.ReadEmbeddedPointer<Struct_8>(new System.Func<Struct_8>(u.Read_7), false);
                goto done;
            }
            throw new System.ArgumentException("No matching union selector when marshaling Union_7");
        done:
            return;
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 4;
        }
        private uint Selector;
        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<Struct_8> Arm_1;
        public static Union_7 CreateDefault()
        {
            return new Union_7();
        }
        public Union_7(uint Selector, System.Nullable<Struct_8> Arm_1)
        {
            this.Selector = Selector;
            this.Arm_1 = Arm_1;
        }
    }
    public struct Struct_8 : NtApiDotNet.Ndr.Marshal.INdrStructure
    {
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Marshal(NtApiDotNet.Ndr.Marshal.NdrMarshalBuffer m)
        {
            Marshal(((_Marshal_Helper)(m)));
        }
        private void Marshal(_Marshal_Helper m)
        {
            m.WriteInt64(Member0);
            m.WriteEmbeddedPointer<string>(Member8, new System.Action<string>(m.WriteTerminatedString));
        }
        void NtApiDotNet.Ndr.Marshal.INdrStructure.Unmarshal(NtApiDotNet.Ndr.Marshal.NdrUnmarshalBuffer u)
        {
            Unmarshal(((_Unmarshal_Helper)(u)));
        }
        private void Unmarshal(_Unmarshal_Helper u)
        {
            Member0 = u.ReadInt64();
            Member8 = u.ReadEmbeddedPointer<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
        }
        int NtApiDotNet.Ndr.Marshal.INdrStructure.GetAlignment()
        {
            return 8;
        }
        public long Member0;
        public NtApiDotNet.Ndr.Marshal.NdrEmbeddedPointer<string> Member8;
        public static Struct_8 CreateDefault()
        {
            return new Struct_8();
        }
        public Struct_8(long Member0, string Member8)
        {
            this.Member0 = Member0;
            this.Member8 = Member8;
        }
    }
    #endregion
    #region Client Implementation
    public sealed class Client : NtApiDotNet.Win32.Rpc.RpcClientBase
    {
        public Client() : 
                base("8d9f4e40-a03d-11ce-8f69-08003e30051b", 1, 0)
        {
        }
        private _Unmarshal_Helper SendReceive(int p, _Marshal_Helper m)
        {
            return new _Unmarshal_Helper(SendReceive(p, m.DataRepresentation, m.ToArray(), m.Handles));
        }
        public int PNP_Connect(string p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            _Unmarshal_Helper u = SendReceive(0, m);
            return u.ReadInt32();
        }
        public int PNP_Connect_1(string p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            _Unmarshal_Helper u = SendReceive(1, m);
            return u.ReadInt32();
        }
        public int PNP_GetVersion(out short p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(2, m);
            p0 = u.ReadInt16();
            return u.ReadInt32();
        }
        public int PNP_GetGlobalState(out int p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(3, m);
            p0 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_InitDetection()
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(4, m);
            return u.ReadInt32();
        }
        public int PNP_ReportLogOn(int p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(5, m);
            return u.ReadInt32();
        }
        public int PNP_ValidateDeviceInstance(string p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(6, m);
            return u.ReadInt32();
        }
        public int PNP_GetRootDeviceInstance(out string p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(7, m);
            p0 = u.ReadConformantVaryingString();
            return u.ReadInt32();
        }
        public int PNP_GetRelatedDeviceInstance(int p0, string p1, out string p2, ref int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(8, m);
            p2 = u.ReadConformantVaryingString();
            p3 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_EnumerateSubKeys(int p0, int p1, out string p2, int p3, out int p4, int p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.WriteInt32(p1);
            m.WriteInt32(p3);
            m.WriteInt32(p5);
            _Unmarshal_Helper u = SendReceive(9, m);
            p2 = u.ReadConformantVaryingString();
            p4 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetDeviceList(string p0, out char[] p1, ref int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(10, m);
            p1 = u.Read_9();
            p2 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetDeviceListSize(string p0, out int p1, int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p2);
            _Unmarshal_Helper u = SendReceive(11, m);
            p1 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetDepth(string p0, out int p1, int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p2);
            _Unmarshal_Helper u = SendReceive(12, m);
            p1 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetDeviceRegProp(string p0, int p1, ref int p2, out sbyte[] p3, ref int p4, ref int p5, int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(13, m);
            p2 = u.ReadInt32();
            p3 = u.Read_10();
            p4 = u.ReadInt32();
            p5 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_SetDeviceRegProp(string p0, int p1, int p2, sbyte[] p3, int p4, int p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.Write_14(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p3, "p3"), p4);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            _Unmarshal_Helper u = SendReceive(14, m);
            return u.ReadInt32();
        }
        public int PNP_GetClassInstance(string p0, out string p1, int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p2);
            _Unmarshal_Helper u = SendReceive(15, m);
            p1 = u.ReadConformantVaryingString();
            return u.ReadInt32();
        }
        public int PNP_CreateKey(string p0, int p1, int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            _Unmarshal_Helper u = SendReceive(16, m);
            return u.ReadInt32();
        }
        public int PNP_DeleteRegistryKey(string p0, string p1, string p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"));
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(17, m);
            return u.ReadInt32();
        }
        public int PNP_Connect_18(out int p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(18, m);
            p0 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetClassName(string p0, out string p1, ref int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(19, m);
            p1 = u.ReadConformantVaryingString();
            p2 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_DeleteClassKey(string p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(20, m);
            return u.ReadInt32();
        }
        public int PNP_GetInterfaceDeviceAlias(string p0, System.Guid p1, out string p2, ref int p3, ref int p4, int p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteGuid(p1);
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            _Unmarshal_Helper u = SendReceive(21, m);
            p2 = u.ReadConformantVaryingString();
            p3 = u.ReadInt32();
            p4 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetInterfaceDeviceList(System.Guid p0, string p1, out char[] p2, ref int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteGuid(p0);
            m.WriteReferent(p1, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(22, m);
            p2 = u.Read_12();
            p3 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetInterfaceDeviceListSize(out int p0, System.Guid p1, string p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteGuid(p1);
            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(23, m);
            p0 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_RegisterDeviceClassAssociation(string p0, System.Guid p1, string p2, out string p3, ref int p4, ref int p5, int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteGuid(p1);
            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(24, m);
            p3 = u.ReadConformantVaryingString();
            p4 = u.ReadInt32();
            p5 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_UnregisterDeviceClassAssociation(string p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(25, m);
            return u.ReadInt32();
        }
        public int PNP_GetClassRegProp(string p0, int p1, ref int p2, out sbyte[] p3, ref int p4, ref int p5, int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(26, m);
            p2 = u.ReadInt32();
            p3 = u.Read_10();
            p4 = u.ReadInt32();
            p5 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_SetClassRegProp(string p0, int p1, int p2, sbyte[] p3, int p4, int p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.Write_14(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p3, "p3"), p4);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            _Unmarshal_Helper u = SendReceive(27, m);
            return u.ReadInt32();
        }
        public int PNP_CreateDevInst(ref string p0, string p1, int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.Write_20(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"), p2);
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(28, m);
            p0 = u.ReadConformantVaryingString();
            return u.ReadInt32();
        }
        public int PNP_DeviceInstanceAction(int p0, int p1, string p2, string p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.WriteInt32(p1);
            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));
            m.WriteReferent(p3, new System.Action<string>(m.WriteTerminatedString));
            _Unmarshal_Helper u = SendReceive(29, m);
            return u.ReadInt32();
        }
        public int PNP_GetDeviceStatus(string p0, out int p1, out int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(30, m);
            p1 = u.ReadInt32();
            p2 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_SetDeviceProblem(string p0, int p1, int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            _Unmarshal_Helper u = SendReceive(31, m);
            return u.ReadInt32();
        }
        public int PNP_DisableDevInst(string p0, ref System.Nullable<NtApiDotNet.Ndr.Marshal.NdrEnum16> p1, ref string p2, int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteReferent(p1, new System.Action<NtApiDotNet.Ndr.Marshal.NdrEnum16>(m.WriteEnum16));
            m.WriteReferent(p2, new System.Action<string, long>(m.Write_21), (p3 + 1));
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(32, m);
            p1 = u.ReadReferentValue<NtApiDotNet.Ndr.Marshal.NdrEnum16>(new System.Func<NtApiDotNet.Ndr.Marshal.NdrEnum16>(u.ReadEnum16), false);
            p2 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            return u.ReadInt32();
        }
        public int PNP_UninstallDevInst(string p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(33, m);
            return u.ReadInt32();
        }
        public int PNP_AddID(string p0, string p1, int p2)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<string>(m.WriteTerminatedString));
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p2);
            _Unmarshal_Helper u = SendReceive(34, m);
            return u.ReadInt32();
        }
        public int PNP_RegisterDriver(string p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(35, m);
            return u.ReadInt32();
        }
        public int PNP_QueryRemove(string p0, ref System.Nullable<NtApiDotNet.Ndr.Marshal.NdrEnum16> p1, ref string p2, int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteReferent(p1, new System.Action<NtApiDotNet.Ndr.Marshal.NdrEnum16>(m.WriteEnum16));
            m.WriteReferent(p2, new System.Action<string, long>(m.Write_22), (p3 + 1));
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(36, m);
            p1 = u.ReadReferentValue<NtApiDotNet.Ndr.Marshal.NdrEnum16>(new System.Func<NtApiDotNet.Ndr.Marshal.NdrEnum16>(u.ReadEnum16), false);
            p2 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            return u.ReadInt32();
        }
        public int PNP_RequestDeviceEject(string p0, ref System.Nullable<NtApiDotNet.Ndr.Marshal.NdrEnum16> p1, ref string p2, int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteReferent(p1, new System.Action<NtApiDotNet.Ndr.Marshal.NdrEnum16>(m.WriteEnum16));
            m.WriteReferent(p2, new System.Action<string, long>(m.Write_23), (p3 + 1));
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(37, m);
            p1 = u.ReadReferentValue<NtApiDotNet.Ndr.Marshal.NdrEnum16>(new System.Func<NtApiDotNet.Ndr.Marshal.NdrEnum16>(u.ReadEnum16), false);
            p2 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            return u.ReadInt32();
        }
        public int PNP_IsDockStationPresent(ref System.Nullable<int> p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteReferent(p0, new System.Action<int>(m.WriteInt32));
            _Unmarshal_Helper u = SendReceive(38, m);
            p0 = u.ReadReferentValue<int>(new System.Func<int>(u.ReadInt32), false);
            return u.ReadInt32();
        }
        public int PNP_RequestEjectPC()
        {
            _Marshal_Helper m = new _Marshal_Helper();
            _Unmarshal_Helper u = SendReceive(39, m);
            return u.ReadInt32();
        }
        public int PNP_HwProfFlags(int p0, string p1, int p2, ref int p3, ref System.Nullable<NtApiDotNet.Ndr.Marshal.NdrEnum16> p4, ref string p5, int p6, int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            m.WriteReferent(p4, new System.Action<NtApiDotNet.Ndr.Marshal.NdrEnum16>(m.WriteEnum16));
            m.WriteReferent(p5, new System.Action<string, long>(m.Write_24), (p6 + 1));
            m.WriteInt32(p6);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(40, m);
            p3 = u.ReadInt32();
            p4 = u.ReadReferentValue<NtApiDotNet.Ndr.Marshal.NdrEnum16>(new System.Func<NtApiDotNet.Ndr.Marshal.NdrEnum16>(u.ReadEnum16), false);
            p5 = u.ReadReferent<string>(new System.Func<string>(u.ReadConformantVaryingString), false);
            return u.ReadInt32();
        }
        public int PNP_GetHwProfInfo(int p0, ref Struct_1 p1, int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.Write_0(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(41, m);
            p1 = u.Read_0();
            return u.ReadInt32();
        }
        public int PNP_AddEmptyLogConf(string p0, int p1, out int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(42, m);
            p2 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_FreeLogConf(string p0, int p1, int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(43, m);
            return u.ReadInt32();
        }
        public int PNP_GetFirstLogConf(string p0, int p1, out int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(44, m);
            p2 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetNextLogConf(string p0, int p1, int p2, out int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(45, m);
            p3 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetLogConfPriority(string p0, int p1, int p2, out int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(46, m);
            p3 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_AddResDes(string p0, int p1, int p2, int p3, out int p4, sbyte[] p5, int p6, int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            m.Write_25(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p5, "p5"), p6);
            m.WriteInt32(p6);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(47, m);
            p4 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_FreeResDes(string p0, int p1, int p2, int p3, int p4, out int p5, out int p6, int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(48, m);
            p5 = u.ReadInt32();
            p6 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetNextResDes(string p0, int p1, int p2, int p3, int p4, out int p5, out int p6, int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(49, m);
            p5 = u.ReadInt32();
            p6 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetResDesData(string p0, int p1, int p2, int p3, int p4, out sbyte[] p5, int p6, int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p6);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(50, m);
            p5 = u.Read_13();
            return u.ReadInt32();
        }
        public int PNP_GetResDesDataSize(string p0, int p1, int p2, int p3, int p4, out int p5, int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(51, m);
            p5 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_ModifyResDes(string p0, int p1, int p2, int p3, int p4, int p5, sbyte[] p6, int p7, int p8)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            m.Write_26(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p6, "p6"), p7);
            m.WriteInt32(p7);
            m.WriteInt32(p8);
            _Unmarshal_Helper u = SendReceive(52, m);
            return u.ReadInt32();
        }
        public int PNP_DetectResourceConflict(string p0, int p1, sbyte[] p2, int p3, out int p4, int p5)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.Write_27(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"), p3);
            m.WriteInt32(p3);
            m.WriteInt32(p5);
            _Unmarshal_Helper u = SendReceive(53, m);
            p4 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_QueryResConfList(string p0, int p1, sbyte[] p2, int p3, out sbyte[] p4, int p5, int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.Write_27(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"), p3);
            m.WriteInt32(p3);
            m.WriteInt32(p5);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(54, m);
            p4 = u.Read_16();
            return u.ReadInt32();
        }
        public int PNP_SetHwProf(int p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(55, m);
            return u.ReadInt32();
        }
        public int PNP_Connect_56(out sbyte[] p0, int p1, string p2, int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p1);
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"));
            m.WriteInt32(p3);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(56, m);
            p0 = u.Read_17();
            return u.ReadInt32();
        }
        public int PNP_QueryArbitratorFreeSize(out int p0, string p1, int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(57, m);
            p0 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_RunDetection(int p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p0);
            _Unmarshal_Helper u = SendReceive(58, m);
            return u.ReadInt32();
        }
        public int PNP_RegisterNotification(NtApiDotNet.Ndr.Marshal.NdrUInt3264 p0, NtApiDotNet.Ndr.Marshal.NdrEnum16 p1, string p2, sbyte[] p3, int p4, int p5, out NtApiDotNet.Ndr.Marshal.NdrContextHandle p6, int p7, long p8)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteUInt3264(p0);
            m.WriteEnum16(p1);
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p2, "p2"));
            m.Write_14(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p3, "p3"), p4);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            m.WriteInt32(p7);
            m.WriteInt64(p8);
            _Unmarshal_Helper u = SendReceive(59, m);
            p6 = u.ReadContextHandle();
            return u.ReadInt32();
        }
        public int PNP_UnregisterNotification(ref NtApiDotNet.Ndr.Marshal.NdrContextHandle p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteContextHandle(p0);
            _Unmarshal_Helper u = SendReceive(60, m);
            p0 = u.ReadContextHandle();
            return u.ReadInt32();
        }
        public int PNP_GetCustomDevProp(string p0, string p1, out int p2, out sbyte[] p3, out int p4, ref int p5, int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p5);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(61, m);
            p2 = u.ReadInt32();
            p3 = u.Read_18();
            p4 = u.ReadInt32();
            p5 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetVersionInternal(ref short p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt16(p0);
            _Unmarshal_Helper u = SendReceive(62, m);
            p0 = u.ReadInt16();
            return u.ReadInt32();
        }
        public int PNP_GetBlockedDriverInfo(out sbyte[] p0, out int p1, ref int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(63, m);
            p0 = u.Read_19();
            p1 = u.ReadInt32();
            p2 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetServerSideDeviceInstallFlags(out int p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(64, m);
            p0 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_GetObjectPropKeys(string p0, int p1, string p2, ref int p3, out int p4, out Struct_2[] p5, int p6)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));
            m.WriteInt32(p3);
            m.WriteInt32(p6);
            _Unmarshal_Helper u = SendReceive(65, m);
            p3 = u.ReadInt32();
            p4 = u.ReadInt32();
            p5 = u.Read_20();
            return u.ReadInt32();
        }
        public int PNP_GetObjectProp(string p0, int p1, string p2, Struct_2 p3, out int p4, ref int p5, out int p6, out sbyte[] p7, int p8)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));
            m.Write_1(p3);
            m.WriteInt32(p5);
            m.WriteInt32(p8);
            _Unmarshal_Helper u = SendReceive(66, m);
            p4 = u.ReadInt32();
            p5 = u.ReadInt32();
            p6 = u.ReadInt32();
            p7 = u.Read_21();
            return u.ReadInt32();
        }
        public int PNP_SetObjectProp(string p0, int p1, string p2, Struct_2 p3, int p4, int p5, sbyte[] p6, int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            m.WriteReferent(p2, new System.Action<string>(m.WriteTerminatedString));
            m.Write_1(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p5);
            m.WriteReferent(p6, new System.Action<sbyte[], long>(m.Write_34), p5);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(67, m);
            return u.ReadInt32();
        }
        // async
        public int PNP_InstallDevInst(string p0, Struct_3 p1, Struct_6 p2, out int p3, int p4)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.Write_2(p1);
            m.Write_5(p2);
            m.WriteInt32(p4);
            _Unmarshal_Helper u = SendReceive(68, m);
            p3 = u.ReadInt32();
            return u.ReadInt32();
        }
        // async
        public int PNP_AddDriverPackage(string p0, string p1, int p2, Struct_6 p3, ref int p4, out string p5, out int p6, int p7)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p2);
            m.Write_5(p3);
            m.WriteInt32(p4);
            m.WriteInt32(p7);
            _Unmarshal_Helper u = SendReceive(69, m);
            p4 = u.ReadInt32();
            p5 = u.ReadConformantVaryingString();
            p6 = u.ReadInt32();
            return u.ReadInt32();
        }
        // async
        public int PNP_DeleteDriverPackage(string p0, Struct_6 p1, out int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.Write_5(p1);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(70, m);
            p2 = u.ReadInt32();
            return u.ReadInt32();
        }
        public int PNP_RegisterServiceNotification(long p0, string p1, int p2, int p3)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteInt64(p0);
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p1, "p1"));
            m.WriteInt32(p2);
            m.WriteInt32(p3);
            _Unmarshal_Helper u = SendReceive(71, m);
            return u.ReadInt32();
        }
        public int PNP_SetActiveService(string p0, int p1)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            m.WriteInt32(p1);
            _Unmarshal_Helper u = SendReceive(72, m);
            return u.ReadInt32();
        }
        public int PNP_DeleteServiceDevices(string p0)
        {
            _Marshal_Helper m = new _Marshal_Helper();
            m.WriteTerminatedString(NtApiDotNet.Win32.Rpc.RpcUtils.CheckNull(p0, "p0"));
            _Unmarshal_Helper u = SendReceive(73, m);
            return u.ReadInt32();
        }
    }
    #endregion
}

